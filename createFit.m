function [fitresult, gof, output] = createFit(CellData,options)
%CREATEFIT(WN_7CSSP0,SIG_7CSSP0)
%  Create a fit.
%
%  Data for '7Cssp0' fit:
%      X Input : wn_7Cssp0
%      Y Output: sig_7Cssp0
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 25-Aug-2014 16:22:59

%% Extract CellData
x = CellData{1};
y = CellData{2};

%% Damping Coefficients
G = options.G;
% Bounds
dG = options.dG;

%% Peak Positions
w = options.w;
% Bounds
dw = options.dw;

%% Non Resonant Signal
% Slope
m = -0.0045;
b = w(numel(w)) * abs(m);
% Bounds
db = 5;

%% Oscillator Strengths
A = zeros(1,length(w));
i = 1;

% Create dummy weights array
opts.Weights = ones(1,length(x));

while i <= numel(A)
    % Find index number of each Start Point of the peak frequencies
    [delta, idx] = min(abs(x - w(i)));
    % If peak location is not in range make the index num the max idx of x
    if w(i) > (max(x) - dw)
        [value, idx] = max(x);
        idx = idx + dw;
    end
    % Get the values around the Start Point for each peak
    k = ceil(-dw/2);
    n = 1;
    while k <= dw/2
        yVals(n) = y(idx + k);
        k = k + 1;
        n = n + 1;
    end
    % Get the maximum Value and Idex of the y values around the peak position
    [yValsMax, yIdxMax] = max(yVals);
    % Weight the indices around the maximum value of the peak area
    % Number of weighted data point
    nwdp = 1;
    % Weight
    wgt = 10;
    for q=(-nwdp):nwdp
        opts.Weights(idx+q) = wgt;
    end
    % Make a guess for A(i)
    DC = G(i);
    NR = m*x(idx) + b;
    % A(i) = -228.7 + 2.936*yValsMax + 48.41*DC - 0.006983*yValsMax^2 - 0.1827*yValsMax*DC - 2.64*DC^2;
    A(i) = ((yValsMax - 20*NR)/2 * DC/2)/4;
    OS = A(i);
    i = i + 1;
end
A(1) = 1;
if A(3) < A(4)
    A(3) = -(A(4) + 10);
end
% A(8) = 1;


%% Fit.
[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
ft = options.ft;
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Robust = 'LAR';
opts.StartPoint = ...
    [A ...
    1 ...
    G ...
    b m ...
    w];
opts.Lower = ...
    [(ones(1,length(w)).*(-Inf)) ...
    0 ...
    G-dG ...
    b-db -0.05 ...
    w-dw];
opts.Upper = ...
    [(ones(1,length(w)).*Inf) ...
    min(y) ...
    G+dG ...
    b+db 0 ...
    w+dw];

opts.MaxIter = 1000;
opts.MaxFunEvals = 30000;
opts.TolFun = 10e-10;

%% Fit model to data.
[fitresult, gof, output] = fit( xData, yData, ft, opts );

%% Plot fit with data.
%   name = inputname(1);
name = options.name;
figure( 'Name', name );
h = plot( fitresult, xData, yData );
legend( h, 'Data', 'Fit', 'Location', 'NorthEast' );
% Label axes
xlabel( 'WN' );
ylabel( 'Signal' );
grid on


